name: Continuous Integration

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

jobs:
  build:
    strategy:
      matrix:
        os: [macos-12, ubuntu-22.04, windows-2022]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set environment variables
      run: echo CONAN_USER_HOME=${{ runner.temp }} >> ${{ github.env }}
      
    - name: Cache Conan packages
      uses: actions/cache@v3
      with:
        path: ${{ env.CONAN_USER_HOME }}/.conan/data
        key: conandata-${{ runner.os }}-${{ hashFiles('conanfile.py') }}
        restore-keys: conandata-${{ runner.os }}-

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
        cache: 'pip'

    - name: Install dependencies
      shell: bash
      run: |
        pip install -r requirements.txt
        conan profile new default --detect
        if [ ${{ matrix.os }} = ubuntu-22.04 ]; then
          conan profile update settings.compiler.libcxx=libstdc++11 default
        fi
        conan install . -b missing

    - name: Configure
      shell: pwsh
      run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])"

    - name: Build
      run: cmake --build build --config Release -j 2

    # Circumvent permission issues, this is the recommended way according to this source
    # https://github.com/actions/upload-artifact#maintaining-file-permissions-and-case-sensitive-files
    - name: Tar files
      run: tar -cvf build-${{ matrix.os }}.tar build

    - name: Upload build
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}
        path: build-${{ matrix.os }}.tar

  test:
    needs: build
    strategy:
      matrix:
        os: [macos-12, ubuntu-22.04, windows-2022]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Download build
      uses: actions/download-artifact@v3
      with:
        name: build-${{ matrix.os }}

    - name: Extract files
      run: |
        mkdir build
        tar -xvf build-${{ matrix.os }}.tar build

    - name: Test
      working-directory: build
      run: ctest --output-on-failure --no-tests=error -C Release -j 2